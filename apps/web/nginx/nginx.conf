events {
    worker_connections 1024;
}

http {
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    server {
        listen 80;
        server_name localhost;
        
        # Prolead routing
        location /prolead/ {
            error_page 503 =503 /maintenance.html;
            
            proxy_pass http://172.30.11.49:8009/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 2s;
        }
        
        # Test-client routing (React app) - FIXED VERSION
        location /test/ {
            error_page 502 503 504 =503 /maintenance.html;

            proxy_pass http://172.30.11.49:8010/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 5s;
            proxy_read_timeout 30s;
            
            # Important: Handle asset paths for React apps
            # Rewrite location header for redirects
            # proxy_redirect http://172.30.11.49:8010/ /test/;
            
            # # Handle JavaScript and CSS files served with wrong content-type
            # location ~* \.(js|css)$ {
            #     proxy_pass http://172.30.11.49:8010;
            #     proxy_set_header Host $host;
            #     add_header Cache-Control "public, max-age=31536000";
            # }
        }
        
        # Maintenance page
        location = /maintenance.html {
            internal;
            return 503 "Service temporarily unavailable";
            add_header Content-Type text/plain;
        }
        
        # Default route
        location / {
            return 200 "Nginx Reverse Proxy is running! Available routes: /prolead/, /test/";
            add_header Content-Type text/plain;
        }
    }
}